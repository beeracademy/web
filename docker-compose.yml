services:
  app:
    image: &app ghcr.io/beeracademy/web
    restart: always
    networks:
      - traefik
      - default
    volumes:
      - ./media:/app/media
      - ./static:/app/static
      - ./.env:/app/.env
    labels:
      - traefik.enable=true
      - traefik.http.routers.academy-beer.rule=Host(`academy.beer`)
      - traefik.http.services.academy-beer.loadbalancer.server.port=8000
    depends_on:
      - db
      - media
      - static
      - redis
    healthcheck:
      test: 'curl --fail --head http://academy.beer:8000/ --resolve academy.beer:8000:127.0.0.1 || exit 1'
      interval: 60s
      retries: 5
      start_period: 60s
      timeout: 10s

  celery:
    image: *app
    restart: always
    command: ["celery", "--app=academy", "worker", "--loglevel=INFO"]
    volumes:
      - ./.env:/app/.env
    depends_on:
      - app
      - redis
      - db

  celery-beat:
    image: *app
    restart: always
    command:
      [
        "./wait_for_app",
        "celery",
        "--app=academy",
        "beat",
        "--loglevel=INFO",
        "--scheduler=django_celery_beat.schedulers:DatabaseScheduler",
      ]
    volumes:
      - ./.env:/app/.env
    depends_on:
      - app
      - redis
      - db

  db:
    image: postgres:15
    restart: always
    volumes:
      - ./postgres-data-15:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db

  media:
    image: nginx:alpine
    restart: always
    volumes:
      - ./media:/usr/share/nginx/html
      - ./nginx-default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.media-academy-beer.rule=Host(`media.academy.beer`)
      - traefik.http.services.media-academy-beer.loadbalancer.server.port=80

  static:
    image: nginx:alpine
    restart: always
    volumes:
      - ./static:/usr/share/nginx/html
      - ./nginx-default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.static-academy-beer.rule=Host(`static.academy.beer`)
      - traefik.http.services.static-academy-beer.loadbalancer.server.port=80

  redis:
    image: redis:alpine
    restart: always

networks:
  traefik:
    external: true
